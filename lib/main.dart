import 'package:flutter/material.dart';

void main() => runApp(MaterialApp(
  home: QuoteList(),
));

class Quote {
  String text;
  String author;
  String image;
  double rating;
  int ratingcount;
  String description;
  double price;

  Quote({required this.text, required this.author, required this.image, required this.rating, required this.ratingcount, required this.description, required this.price,});
}
class QuoteList extends StatefulWidget {
  @override
  _QuoteListState createState() => _QuoteListState();
}

class _QuoteListState extends State<QuoteList> {
  List<Quote> quotes = [
    Quote(text: 'ржкржжрзНржорж╛ржиржжрзАрж░ ржорж╛ржЭрж┐', author: '-ржорж╛ржирж┐ржХ ржмржирзНржжрзНржпрзЛржкрж╛ржзрзНржпрж╛ржпрж╝', rating: 4.5, ratingcount: 5500, image: 'Images/book4.png', description: 'ржЖржзрзБржирж┐ржХ ржмрж╛ржВрж▓рж╛ ржЙржкржирзНржпрж╛рж╕рзЗрж░ ржмрж┐рж╢рж╛рж▓ ржЖржЩрзНржЧрж┐ржирж╛ржпрж╝ ржиржжрзАржЬрзАржмрзА ржорж╛ржирзБрж╖ржжрзЗрж░ ржирж┐ржпрж╝рзЗ рж░ржЪрж┐ржд ржкрзНрж░ржержо ржЙржкржирзНржпрж╛рж╕ ржкржжрзНржорж╛ ржиржжрзАрж░ ржорж╛ржЭрж┐ред рззрзпрзйрзм рж╕рж╛рж▓рзЗ ржПржЯрж┐ ржкрзНрж░ржХрж╛рж╢рж┐ржд рж╣ржпрж╝ред ржорж╛ржирж┐ржХ ржмржирзНржжрзНржпрзЛржкрж╛ржзрзНржпрж╛ржпрж╝рзЗрж░ ржЧрзНрж░ржирзНржерж╕ржорзВрж╣рзЗрж░ ржоржзрзНржпрзЗ ржПржЯрж┐ржЗ рж╕рж░рзНржмрж╛ржзрж┐ржХ ржЕржирзВржжрж┐ржд ржЧрзНрж░ржирзНржеред ржЙржкржирзНржпрж╛рж╕ржЯрж┐рждрзЗ рж▓рзЗржЦржХ ржЬрзЗрж▓рзЗ-ржЬрзАржмржи ржУ ржЬрж▓-ржЬрзАржмржи ржЕржЩрзНржХржирзЗ ржПржмржВ ржЪрж░рж┐рждрзНрж░ржЪрж┐рждрзНрж░ржгрзЗ ржЕржкрзВрж░рзНржм ржорзБржирзНрж╕рж┐ржпрж╝рж╛ржирж╛рж░ ржкрж░рж┐ржЪржпрж╝ рж░рзЗржЦрзЗржЫрзЗржиред', price: 600),
    Quote(text: 'ржЖрж░ржгрзНржпржХ', author: '-ржмрж┐ржнрзВрждрж┐ржнрзВрж╖ржг ржмржирзНржжрзНржпрзЛржкрж╛ржзрзНржпрж╛ржпрж╝', rating: 3.8, ratingcount: 4500, image: 'Images/book3.png', description: 'Aranyak is a simple and uncomplicated story. The protagonist Satyacharan has gone to an estate in Bhagalpur after getting a job of a manager. Initially his urban lifestyle might have revolted against the lonely jungle life but gradually nature hypnotized Satyacharan. Gradually he can not even resist a moments absence from the forest. Satyacharan and his partner Jugalprasad, a perfect match to the nature-loving soul of Satyacharan decorated the forest by planting many rare species of herbs and saplings. But Satyacharan is an estate manager. He has to destroy this creation of the forest-Goddess against his own will and distribute it amongst the local people. Age old gigantic trees as well as plants and herbs of rare species are getting destroyed with the sharp axes. This results in a deep feeling of guilt and sadness at the end of the novel.', price: 250),
    Quote(text: 'рж▓рж╛рж▓рж╕рж╛рж▓рзБ', author: '-рж╕рзИржпрж╝ржж ржУржпрж╝рж╛рж▓рж┐ржЙрж▓рзНрж▓рж╛рж╣', rating: 4.5, ratingcount: 6500, image: 'Images/book5.png', description: 'рж▓рж╛рж▓рж╕рж╛рж▓рзБ рж╕рзИржпрж╝ржж ржУржпрж╝рж╛рж▓рж┐ржЙрж▓рзНрж▓рж╛рж╣ рж░ржЪрж┐ржд ржПржХржЯрж┐ ржЙржкржирзНржпрж╛рж╕ ред ржЙржкржирзНржпрж╛рж╕ржЯрж┐ ржкрзНрж░ржержо ржкрзНрж░ржХрж╛рж╢рж┐ржд рж╣ржпрж╝ рззрзпрзкрзо рж╕рж╛рж▓рзЗ, ржжрзНржмрж┐рждрзАржпрж╝ ржкрзНрж░ржХрж╛рж╢ржХрж╛рж▓ рззрзпрзмрзжред ржПрж░ ржкржЯржнрзВржорж┐ рззрзпрзкрзж ржХрж┐ржВржмрж╛ рззрзпрзлрзж ржжрж╢ржХрзЗрж░ ржмрж╛ржВрж▓рж╛ржжрзЗрж╢рзЗрж░ ржЧрзНрж░рж╛ржорж╕ржорж╛ржЬ рж╣рж▓рзЗржУ ржПрж░ ржкрзНрж░ржнрж╛ржм ржмрж╛ ржмрж┐рж╕рзНрждрж╛рж░ ржХрж╛рж▓рзЛрждрзНрждрзАрж░рзНржг ред ржорзВрж▓ржд ржЧрзНрж░рж╛ржорзАржг рж╕ржорж╛ржЬрзЗрж░ рж╕рж╛ржзрж╛рж░ржг ржорж╛ржирзБрж╖рзЗрж░ рж╕рж░рж▓рждрж╛ржХрзЗ ржХрзЗржирзНржжрзНрж░ ржХрж░рзЗ ржзрж░рзНржоржХрзЗ ржмрзНржпржмрж╕рж╛рж░ ржЙржкрж╛ржжрж╛ржирж░рзВржкрзЗ ржмрзНржпржмрж╣рж╛рж░рзЗрж░ ржПржХржЯрж┐ ржиржЧрзНржи ржЪрж┐рждрзНрж░ ржЙржкржирзНржпрж╛рж╕ржЯрж┐рж░ ржорзВрж▓ ржмрж┐рж╖ржпрж╝ред ржЙржкржирзНржпрж╛рж╕ржЯрж┐рж░ рж░ржЪржирж╛ржХрж╛рж▓ рззрзпрзкрзо рж╕рж╛рж▓ред ржПржЯрж┐ рж╕рзИржпрж╝ржж ржУржпрж╝рж╛рж▓рж┐ржЙрж▓рзНрж▓рж╛рж╣рж░ ржкрзНрж░ржержо ржЙржкржирзНржпрж╛рж╕ред ржПржЯрж┐ ржкрж░рзЗ ржЗржВрж░рзЗржЬрж┐ ржУ ржлрж░рж╛рж╕рж┐ ржнрж╛рж╖рж╛ржпрж╝ ржЕржирзБржмрж╛ржж ржХрж░рж╛ рж╣ржпрж╝ред', price: 400),
    Quote(text: 'рж╣рж┐ржорзБ рж░рж┐ржорж╛ржирзНржбрзЗ', author: '-рж╣рзБржорж╛рзЯрзВржи ржЖрж╣ржорзЗржж', rating: 4, ratingcount: 36500, image: 'Images/book1.jpg', description: 'ржжрзБржкрзБрж░рзЗ рж╣рзЗржнрж┐ ржЦрж╛ржУржпрж╝рж╛ржжрж╛ржУржпрж╝рж╛ рж╣рж▓рзЛред ржЦрж╛рж▓рзБ рж╕рж╛рж╣рзЗржм ржЕржлрж┐рж╕рзЗ ржпрж╛ржи ржирж┐ред рж╕ржмрж╛ржЗ ржорж┐рж▓рзЗ ржПржХрж╕ржЩрзНржЧрзЗ ржЦрж╛ржУржпрж╝рж╛ред рж╢рзБржирж▓рж╛ржо ржХржпрж╝рзЗржХржжрж┐ржи ржзрж░рзЗржЗ рждрж┐ржирж┐ ржЕржлрж┐рж╕рзЗ ржпрж╛ржЪрзНржЫрзЗржи ржирж╛ред рждрж╛ржБрж░ ржпрзЗ рж╢рж░рзАрж░ ржЦрж╛рж░рж╛ржк рждрж╛ржУ ржирж╛ред рждржмрзЗ ржЪрзЛржЦрзЗ ржнрж░рж╕рж╛ рж╣рж╛рж░рж╛ржирзЛ ржжрзГрж╖рзНржЯрж┐ред рж╣ржбрж╝ржмржбрж╝ ржХрж░рзЗ ржЕржХрж╛рж░ржгрзЗ ржХржерж╛ ржмрж▓рзЗ ржпрж╛ржЪрзНржЫрзЗржиред ржкрзГржерж┐ржмрзАрж░ рж╕ржмржЪрзЗтАЩрж╕рзНржмржжрзБ ржЦрж╛ржмрж╛рж░ ржХрзА- ржПржЗ ржмрж┐рж╖ржпрж╝рзЗ ржжрзАрж░рзНржШ ржмржХрзНрждрзГрждрж╛ ржжрж┐рж▓рзЗржиред рждрж╛ржБрж░ ржорждрзЗ рж╣рж░рж┐ржпрж╝рж╛рж▓ ржкрж╛ржЦрж┐рж░ ржорж╛ржВрж╕ ржкрзГржерж┐ржмрзАрж░ рж╕ржмржЪрзЗтАЩрж╕рзНржмрж╛ржжрзБ ржЦрж╛ржмрж╛рж░ред ржХрж╛рж░ржг ржПржЗ ржкрж╛ржЦрж┐ ржмржЯржлрж▓ ржЦрж╛ржпрж╝, ржорж╛ржЫ ржЦрж╛ржпрж╝ ржирж╛ред рж╣рж░рж┐ржпрж╝рж╛рж▓ ржкрж╛ржЦрж┐ ржХрзАржнрж╛ржмрзЗ рж░рж╛ржирзНржирж╛ ржХрж░рждрзЗ рж╣ржпрж╝ рж╕рзЗржЗ рж░рзЗрж╕рж┐ржкрж┐ржУ ржжрж┐рж▓рзЗржиред', price: 500),
    Quote(text: 'ржжрж▓рзЗрж░ ржирж╛ржо ржмрзНрж▓рзНржпрж╛ржХ ржбрзНрж░рж╛ржЧржи', author: '-ржорзБрж╣ржорзНржоржж ржЬрж╛ржлрж░ ржЗржХржмрж╛рж▓', rating: 3.5, ratingcount: 36500, image: 'Images/book2.jpg', description: 'ржнржпрж╝ржЩрзНржХрж░ ржжрзБрж╖рзНржЯрзБ ржЯрж┐ржЯржи, ржзрзАрж░-рж╕рзНржерж┐рж░ ржмрзИржЬрзНржЮрж╛ржирж┐ржХ ржЪржЮрзНржЪрж▓ ржЖрж░ ржорзЛржЯржХрж╛ рж╕рж╛рж╣рж┐рждрзНржпрж┐ржХ ржЕржирзБ ржорж┐рж▓рзЗ рж░рж╛рждрзБрж▓рзЗрж░ ржжрж▓ред ржЫрзБржЯрж┐рж░ ржжрж┐ржиржЧрзБрж▓рзЛ ржЖржиржирзНржжрзЗ ржЖрж░ ржЕрзНржпрж╛ржбржнрзЗржЮрзНржЪрж╛рж░рзЗ ржХрж╛ржЯрж╛ржирзЛрж░ ржЬржирзНржп рждрж╛рж░рж╛ ржПржХржЯрж╛ ржХрзНрж▓рж╛ржм ржмрж╛ржирж╛рж▓, ржирж╛ржо ржмрзНрж▓рзНржпрж╛ржХ ржбрзНрж░рж╛ржЧржиредржЪрж╛рж░ ржЫрзЗрж▓рзЗрж░ рж╕рж╛ржерзЗ ржПрж╕рзЗ ржЬрзБржЯрж▓ ржжрзБржЯрзЛ ржорзЗржпрж╝рзЗ, рж░рж╛рждрзБрж▓рзЗрж░ ржмрзЛржи ржорж┐ржерж┐рж▓рж╛ (рж╕рж╛рж░рж╛ржХрзНрж╖ржи ржирж╛ржХрж┐ рж╕рзБрж░рзЗ ржЖржорзНржорзБржХрзЗ ржнрж╛ржЗржпрж╝рзЗрж░ ржирж╛ржорзЗ ржирж╛рж▓рж┐рж╢ ржХрж░рзЗ) ржЖрж░ ржкрж╛ржбрж╝рж╛ржпрж╝ ржирждрзБржи ржЖрж╕рж╛ ржЯрзБржирж┐ (ржпрж╛рж░ ржЪрзЛржЦрзЗрж░ ржжрзГрж╖рзНржЯрж┐ ржмрж░ржлрзЗрж░ ржорждржи ржарж╛ржирзНржбрж╛)ред ржмрзНрж▓рзНржпрж╛ржХ ржбрзНрж░рж╛ржЧржи ржХрзНрж▓рж╛ржмрзЗрж░ ржЖрж╕рзНрждрж╛ржирж╛рж░ ржЬржирзНржп рждрж╛рж░рж╛ рж╣рж╛ржЬрж┐рж░ рж╣рж▓ ржкрзЛржбрж╝рж╛ ржмрж╛ржбрж╝рж┐ ржорж┐рж╢ржХрж╛ржд ржоржЮрзНржЬрж┐рж▓рзЗред', price: 350)

  ];

  Widget quotetemplate(quote) {
    return Card(
      color: Colors.blueGrey[200],
      elevation: 20.0,
      shape: RoundedRectangleBorder(
        borderRadius: BorderRadius.circular(10.0),
      ),
      margin: EdgeInsets.fromLTRB(18.0, 18.0, 18.0, 0),
      child: Padding(
        padding: const EdgeInsets.all(10.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: <Widget>[
            Row(
              children: <Widget>[
                Expanded(
                  flex: 3,
                  child: Container(
                    child: Image(image: AssetImage(quote.image)),
                    alignment: Alignment.center,
                  ),
                ),
                SizedBox(width: 20.0),
                Expanded(
                  flex: 8,
                  child: Container(
                    height: 120.0,
                    child: Column(
                      children: <Widget>[
                        Text(
                          quote.text,
                          style: TextStyle(
                            fontSize: 25.0,
                            color: Colors.tealAccent[500],
                            fontWeight: FontWeight.bold,
                          ),
                        ),
                        SizedBox(height: 4.0),
                        Text(
                          quote.author,
                          style: TextStyle(
                            fontSize: 15.0,
                            color: Colors.red[900],
                            fontWeight: FontWeight.bold,
                          ),
                        ),
                        SizedBox(height: 12.0),
                        RatingBar(rating: quote.rating, ratingCount: quote.ratingcount),
                      ],
                    ),
                  ),
                ),
              ],
            ),
            SizedBox(height: 2.0),
            FilledButton.icon(
              style: ButtonStyle(
                foregroundColor: MaterialStateProperty.all(Colors.black87),
              ),
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (BuildContext context) => NextPage(book: quote),
                  ),
                );
              },
              icon: Icon(Icons.shopping_cart_sharp),
              label: Text('ЁЯУЪ Buy Now'),
            ),
          ],
        ),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('ЁЯУЪЁЯУЪя╕П  Book Shop  ЁЯУЪЁЯУЪя╕П'),
        backgroundColor: Colors.black,
        centerTitle: true,
      ),
      body: SingleChildScrollView(
        child: Column(
          children: quotes.map((quote) => quotetemplate(quote)).toList(),
        ),
      ),
    );
  }
}

class RatingBar extends StatelessWidget {
  final double rating;
  final double size;
  int? ratingCount;

  RatingBar({required this.rating, this.ratingCount, this.size = 18});

  @override
  Widget build(BuildContext context) {
    List<Widget> _starList = [];
    int realN = rating.floor();
    int partN = ((rating - realN) * 10).ceil();

    for (int i = 0; i < 5; i++) {
      if (i < realN) {
        _starList.add(Icon(Icons.star, color: Colors.yellow, size: size));
      } else if (i == realN) {
        _starList.add(SizedBox(
          height: size,
          width: size,
          child: Stack(
            fit: StackFit.expand,
            children: [
              Icon(Icons.star, color: Colors.blueGrey, size: size),
            ],
          ),
        ));
      } else {
        _starList.add(Icon(Icons.star, color: Colors.grey, size: size));
      }
    }

    return Row(
      mainAxisSize: MainAxisSize.min,
      children: [
        Text(
          'Rating: ',
          style: TextStyle(
            fontSize: size * 0.8,
            fontWeight: FontWeight.w900,
            color: Colors.blueGrey[700],
          ),
        ),
        Row(
          mainAxisSize: MainAxisSize.min,
          children: _starList,
        ),
      ],
    );
  }
}
class NextPage extends StatelessWidget {
  final Quote book;

  NextPage({required this.book});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Details'),
        backgroundColor: Colors.black,
        centerTitle: true,
      ),
      body: Padding(
        padding: const EdgeInsets.fromLTRB(18.0, 18.0, 18.0, 0),
        child: SingleChildScrollView(
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.center,
            children: [
              Image(image: AssetImage(book.image)),
              SizedBox(height: 20),
              Text(
                book.text,
                style: TextStyle(
                  fontSize: 25.0,
                  color: Colors.tealAccent[500],
                  fontWeight: FontWeight.bold,
                ),
              ),
              SizedBox(height: 10),
              Text(
                book.author,
                style: TextStyle(
                  fontSize: 20.0,
                  color: Colors.red[900],
                  fontWeight: FontWeight.bold,
                ),
              ),
              SizedBox(height: 10),
              RatingBar(rating: book.rating, ratingCount: book.ratingcount),
              SizedBox(height: 10),
              Text(
                'Description: ${book.description}',
                style: TextStyle(fontSize: 16.0),
              ),
              SizedBox(height: 5),
              Text(
                'Price: \$${book.price.toStringAsFixed(2)}',
                style: TextStyle(fontSize: 25.0),

              ),
              SizedBox(height: 10.0),
              Container(
                child: DropdownMenuExample(),
              ),
              SizedBox(height: 18.0),
              Container(
                alignment: Alignment.center,
                child: ElevatedButton.icon(

                  onPressed: (){
                    Navigator.pop(context);
                  },
                  label: const Text('Go Back '),
                  icon: Icon(Icons.arrow_back_ios_outlined),
                  style: ElevatedButton.styleFrom(
                    primary: Colors.green,
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.all(Radius.circular(500)),
                    ),
                  ),

                ),
              ),
              SizedBox(height: 18.0),
              Container(
                alignment: Alignment.center,
                child: ElevatedButton.icon(
                  onPressed: (){
                  },
                  label: const Text(
                    'Buy Now ЁЯУЪ',
                    style: TextStyle(fontSize: 16.0),
                  ),
                  icon: Icon(
                    Icons.shopping_cart_outlined,
                    size: 24.0,
                  ),
                  style: ElevatedButton.styleFrom(
                    primary: Colors.deepPurpleAccent,
                    padding: EdgeInsets.symmetric(vertical: 10.0, horizontal: 70.0),
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.all(Radius.circular(500)),
                    ),
                  ),
                ),
              ),

            ],
          ),
        ),
      ),
    );
  }
}


const List<String> list = <String>["Select Your Choose","eBook", "Pocket-sized edition"];

class DropdownMenuExample extends StatefulWidget {
  const DropdownMenuExample({super.key});

  @override
  State<DropdownMenuExample> createState() => _DropdownMenuExampleState();
}

class _DropdownMenuExampleState extends State<DropdownMenuExample> {
  String dropdownValue = list.first;

  @override
  Widget build(BuildContext context) {
    return DropdownMenu<String>(
      initialSelection: list.first,
      onSelected: (String? value) {
        setState(() {
          dropdownValue = value!;
        });
      },
      dropdownMenuEntries: list.map<DropdownMenuEntry<String>>((String value) {
        return DropdownMenuEntry<String>(value: value, label: value);
      }).toList(),
    );
  }
}

